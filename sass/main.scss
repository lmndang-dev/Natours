//COLORS:

$color-primary: #55c57a;
$color-primary-light: #7ED56F;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #FFF;
/* 
Reset CSS: remove all default margin and padding to ensure consistency across browsers
Change box-sizing to border-box for easier sizing calculations: The border and padding will be included in the element's total width and height.
This helps to avoid issues with width and height calculations, especially when using padding or borders.
*/
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/*
  Set the default font size to make the responsive design better
  62.5% of default browser font size is 0.625 * 16px = 10px
  1rem = 10px
*/
html {
  font-size: 62.5%;
}

/* 
This preset will be inherited to any other child element that under the body element
Configure the body element with a default font family, font weight, font size, line height, and text color.
*/
body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh; /* 95% of viewport height */
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover; /* Cover the entire header area - auto adjust when the size screen changing*/
  background-position: top; /* Position the background image at the top */
  position: relative; /* Set the position to relative to allow absolute positioning of child elements */

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem; /* Set the height of the logo - the width gonna be figure out by browser */
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(
    -50%,
    -50%
  ); /* Center the text box vertically and horizontally */

  text-align: center;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  backface-visibility: hidden; /* Hide the backface of the element - avoid shaking in the animation */
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out; /* Animation will start slowly and then speed up */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out; /* Animation will start slowly and then speed up */
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* Button default styles*/
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block; /* Keep the element inline but allow to adjust dimension of the element */
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-3px); /*When hover - move the button up 3px*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(
    -1px
  ); /*When click - move the button up 1px (move down 3px - 1px = 2px)*/
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: $color-white;
  color: $color-grey-dark;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /* Hide below the button*/
  transition: all 0.4s; /* add transition */
}

.btn--white::after {
  background-color: $color-white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; /* Hide it after hover transition*/
}

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  animation-fill-mode: backwards;
}
