@use "../abstracts/variables";
@use "../abstracts/mixins";

.row {
  //Using max-width instead of width
  //When the screen size less than 1140px - using possible max-width
  max-width: variables.$grid-width;
  margin: 0 auto; //trick to center inside block element

  //Applied margin bottom expect the last row
  &:not(:last-child) {
    margin-bottom: variables.$gutter-vertical;

    @include mixins.respond(tab-port) {
      margin-bottom: variables.$gutter-vertical-small;
    }
  }

  @include mixins.respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  //Fixing the weir behavior on float layout
  @include mixins.clearfix;

  //Select all the class start with "col-"
  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: variables.$gutter-horizontal;

      @include mixins.respond(tab-port) {
        margin-right: 0;
        margin-bottom: variables.$gutter-vertical-small;
      }
    }

    @include mixins.respond(tab-port) {
      width: 100% !important;
    }
  }

  //Row of 2 components
  .col-1-of-2 {
    //The with of each will be total width divide by 2
    //and minus the margin between of each container
    width: calc((100% - #{variables.$gutter-horizontal}) / 2);
  }

  //Row of 3 components
  .col-1-of-3 {
    width: calc((100% - 2 * #{variables.$gutter-horizontal}) / 3);
  }

  //Component contain 2/3 with of the row
  .col-2-of-3 {
    //The width of this element will be 2 times the width of single container
    //and plus the 1 gap of margin between container
    width: calc(
      2 * ((100% - 2 * #{variables.$gutter-horizontal}) / 3) + #{variables.$gutter-horizontal}
    );
  }

  //Row of 4 components
  .col-1-of-4 {
    width: calc((100% - 3 * #{variables.$gutter-horizontal}) / 4);
  }

  //Component contain 2/4 with of the row
  .col-2-of-4 {
    //The width of this element will be 2 times the width of single container
    //and plus the 1 gap of margin between container
    width: calc(
      2 * ((100% - 3 * #{variables.$gutter-horizontal}) / 4) + #{variables.$gutter-horizontal}
    );
  }

  //Component contain 3/4 with of the row
  .col-3-of-4 {
    //The width of this element will be 3 times the width of single container
    //and plus the 2 gap of margin between container
    width: calc(
      3 * ((100% - 3 * #{variables.$gutter-horizontal}) / 4) + 2 * #{variables.$gutter-horizontal}
    );
  }
}
